<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RiKa0-0</title>
  
  <subtitle>RiKa0-0</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://rika0-0.github.io/"/>
  <updated>2020-04-12T10:49:15.119Z</updated>
  <id>http://rika0-0.github.io/</id>
  
  <author>
    <name>寒光君</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>日记</title>
    <link href="http://rika0-0.github.io/2020/04/10/%E6%AF%8F%E6%97%A5%E6%84%9F%E8%A8%80/"/>
    <id>http://rika0-0.github.io/2020/04/10/%E6%AF%8F%E6%97%A5%E6%84%9F%E8%A8%80/</id>
    <published>2020-04-10T07:32:32.000Z</published>
    <updated>2020-04-12T10:49:15.119Z</updated>
    
    <content type="html"><![CDATA[<h1 id="心情语录"><a href="#心情语录" class="headerlink" title="心情语录"></a>心情语录</h1><h3 id="2020-04-12-晴"><a href="#2020-04-12-晴" class="headerlink" title="2020-04-12 晴"></a>2020-04-12 晴</h3><pre><code>    去了一趟“广州图书馆”，这是我最喜欢的地方之一，大概有多好呢，我的读者证可以借20本，可以续期多次，哈哈这里有大图书又新又丰富，很容易就能找到自己中意的书，我要是当初报志愿稳一点就能留在广州读大学了，现在后悔死了……</code></pre><h3 id="2020-04-11-阴"><a href="#2020-04-11-阴" class="headerlink" title="2020-04-11 阴"></a>2020-04-11 阴</h3><pre><code>    今天偷偷看了“舞蹈风暴”，我虽然是教“breaking”的老师，但是也会几乎所有的舞种，如果让我挑一个除了breaking之外最喜欢的舞蹈，大概就属“中国舞”了。    看着里边的专业舞者们，李响，王雪柔，张艺凡他/她们在舞台上表现的，出来赞叹不已，还有无限的感慨。    我因为在田径队的训练将双膝前十字韧带弄伤后，历时一年多，自我感觉依然十分的不好，大概也能预料到自己几乎此后都是这般伤遗。    膝盖没有失去了支撑的力量与柔韧性，无论是舞蹈还是田径类体育都不复当年之态，说句实在的，甚至不比常人。    最后只能说句“曾经年少轻狂，落得后生遗殇。”</code></pre><h3 id="2020-04-10-晴"><a href="#2020-04-10-晴" class="headerlink" title="2020-04-10 晴"></a>2020-04-10 晴</h3><pre><code>    广州的天气很好，我却没从病里出来，看了很多的新闻，听见了国人对外人的“异言”。我们常说国人在外受到怎样的种族歧视，我们常常为此而愤慨，但当视角一换，是否能够告诉自己不该成为当初自己讨厌的人……    当我看到地铁了有外国人的车厢几乎没有多少国人的时候，当我看见那些疫情期间我们施以援手的国度却反诬我们的时刻……我们都知道这是个例，但人言可畏，不是吗？    我们一直活在这个时代英雄的保护之下，无外乎全世界的人，但英雄从来都是过去式，下一秒的你可还记得他？    特殊时期，当我国“抗疫”取得成效时，听着诸多自媒体里那洋溢着自豪的褒扬，幸灾乐祸的言论已经泛滥开来，只觉得“谦逊”才是正当之心。    最后，只希望但凡有识之士认清，现在的中华民族伟大复兴还有很长一段路要走。自媒体人鼓吹的各种豪言中国世界论调几尽是博你一笑，跟着无知舆论节奏走只会使人眼界愈加狭小。当有天出现了一篇“中国救了世界而世界开始清算中国”的言论是，会作何感想？    说实在的，我挺讨厌那些媒体的，利益使然不顾后果的报道受害的何止是国家，还有这个国家的子民，更可怕的是跟风的潮流，引领着无知者彻杀着人心。截止今日已经有一点苗头了，看到了几个国家的重要政治人物相继发言反诬中国的言论，看到了自己国家尽力帮助的地域中出现不少的国民对这个人的排斥……真不希望疫情过后的一天，世界对中国开了一个天大的“笑话”。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;心情语录&quot;&gt;&lt;a href=&quot;#心情语录&quot; class=&quot;headerlink&quot; title=&quot;心情语录&quot;&gt;&lt;/a&gt;心情语录&lt;/h1&gt;&lt;h3 id=&quot;2020-04-12-晴&quot;&gt;&lt;a href=&quot;#2020-04-12-晴&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
    
      <category term="心情日记" scheme="http://rika0-0.github.io/tags/%E5%BF%83%E6%83%85%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>璃龙篦</title>
    <link href="http://rika0-0.github.io/2020/04/10/%E7%92%83%E9%BE%99%E7%AF%A6/"/>
    <id>http://rika0-0.github.io/2020/04/10/%E7%92%83%E9%BE%99%E7%AF%A6/</id>
    <published>2020-04-10T07:32:32.000Z</published>
    <updated>2020-04-12T10:50:10.096Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>    这是在我高考结束后的那个漫长假期里写的第三本小说，当时想尝试写个风格另类的文章，后来因为学业的原因写了二十几章就断了，不知道若干年后会不会有重启的计划。    期间写了其他很多的小说，各种类型的都尝试了一下，有些受到了重视签约了，但是没有放进我的博客，之所以放这本没有任何成就的小说，因为它基本上算是我后来写网络小说动力的“处女作”吧。    以下只是一小节内容。</code></pre><h1 id="重生-一"><a href="#重生-一" class="headerlink" title="重生 一"></a>重生 一</h1><p>天下英杰、仙盟百家祭起九天摄魂阵，将赤水妖姬魂赦九天，层封元始。只待这妖身有一刻不可动弹，便召个四象万剑斩它个肉糊骨挫。玄剑交错中，火砾迸溅，焚骨扬灰，时值一日，仙盟百家殚精竭虑只为确保这妖姬再无一丝血肉可存于世，方才停下，疲惫难堪。</p><p>“这般挫骨扬灰之象，当真是残忍，千百年难得一见，这就是身为世间妖祖的后果。”</p><p>“可别大意，这可不是前边那区区上古凶兽所能比拟的，这可是世间妖祖，拂袖间不知能召唤出多少上古凶兽，一凶便让我等如此狼狈，若是一丝气血残存，便可再世，这莫大的戾气必会搅得这世间生灵涂炭。”</p><p>时值此刻，仍有诸多弟子不明白，既然这妖祖如此厉害，怎么终落得这番惨状。</p><p>“我可听说这妖姬始祖确翻江倒海、通天彻地之能，此前即便是四大仙门门主都难以近得她身，伤不及分毫，又怎却……”</p><p>“这你们这些后方施援的人就有所不知了，这最大功劳得多亏了那四大仙门中的浣溪江氏。非是这江家门主有多厉害，而是这江氏一门中竟有熟知这妖姬弱点的弟子，竟还是个外姓弟子！”</p><p>见这众门生不知，四大仙门的子弟便继续道。</p><p>“这浣溪江氏的弟子青缃确实了得，不知这封魔箭矢何来的强大法力，竟可一箭破开那妖姬的结界，冰封了这妖祖的肢体，几箭破魔矢更是轻易击碎了这妖祖的“璃龙篦”，乱了这妖姬的思绪，这才让众仙家摆脱了妖兽的纠缠，争取到了祭起九天摄魂阵的机会。”</p><p>“我看啊，哪是这浣溪江氏外门弟子多么了得，而是她与这妖姬可是四大仙门皆知的“磨镜”吧！被自己至亲之人背叛可真是多么个落魄下场。”说道，那淮杨秦氏门生笑道。</p><p>“好！这大义灭亲，真是大快人心啊！”枫丹白氏的子弟也附和他。</p><p>“确实，这妖祖本是浣溪江氏弟子，江纤尘……”</p><p>“别提她！我们江氏没有这个人！”终于是有浣溪江氏的女弟子应声了，可又有所顾虑，但回头见那青缃师姐为了对抗妖姬已然晕倒，便又放声说道：“真不知青缃师姐是怎么了，竟然总是偏袒上这女妖江纤尘，亲近得过分，我看一定是中了这妖姬的什么邪术！”</p><p>浣溪江氏近几年屡屡在仙盟中扮演也关键角色，跻身四大仙门之末。</p><p>幽都梦氏大师兄梦浮生听着这话有些难受，便道：<br>“这话倒有些言重了，浣溪江氏何能何耐，我所知这浣溪江氏能有今日四大仙门的成就，多亏了这江纤尘。还是说今后没了江纤尘，就凭你们还能保着这四大仙门之位！希望姑娘自重！”<br>说罢，也不愿留下久辩，乘着“尊月剑”而去，一身月色罗裳，发依以白冠束起，身躯凛凛，俨然高冷不可冒犯面相，这在仙家公子中是几近颜首的姿容。</p><p>既然见是幽都梦氏的若梦君开口，众人便不敢多言，待其远去，便有枫丹白氏的子弟道：<br>“就是，若不是那妖姬助你们，你们这羸弱的浣溪江氏又怎么可能上得了仙门四家之列！”</p><p>枫丹白氏在四仙门中排第三，若不江纤尘与浣溪江氏断了关系，这浣溪江氏妥妥是仅次于幽都梦氏的大势力。枫丹白氏家门也以浣溪江氏不齿。</p><p>“即使如此，当年若不是青缃师姐把这妖姬从赤水把她带回江家收养，她又怎么会有如今的成就，她倒好，不尊戒律，枉顾私情，忘恩负义，在外给浣溪江氏添了多少坏名声，闹得天下鸡犬不宁，传言还对我们师姐有非分之想的……”</p><p>“真想不到，这妖祖竟是磨镜，喜好这口！要是我是你们师姐，怎么可能对她这般优柔寡断，当初若在赤水识得这是妖姬始祖，就必然毁她个元神俱灭，怎留得今日祸害。”</p><p>“你莫不是忘了，赤水沿上百家上万甲胄，一夜之间，万妖肆虐，众士血泊赤水之事了，几年前便有这等本事，就凭你怎么可能敌得了。”</p><p>“但如今她已被魂赦九天，焚骨扬灰，永世不得轮回超生，又有何惧。”</p><p>“妖虽已灭，但这“璃龙篦”……”</p><p>这“璃龙篦”一出，倒令人回想了事先与凶兽们交战的恐惧。这“璃龙篦”乃汇天下妖兽之血，以各方妖兽之骸炼制的妖物。任凡人以血代偿，都可能召唤出凶兽为祸一方。而这妖姬始祖更是了得，可同时造出上百凶悍妖兽。<br>众人皆默不敢应声，怕这“璃龙篦”依在，扰这众仙门终不得安宁。</p><p>“方才不是讲过，被那青缃姑娘的破魔矢给击碎了吗，想必如今也随那妖姬葬去，回想这青缃也算是做对了一事，亲手冰封了那妖祖，毁了“璃龙篦”，不然这一役后也是不得不隐退这江氏大门。”</p><p>虽也是有人提出了江纤尘所行善事，但众后生子弟多不曾亲历或与江纤尘、青缃共事过，自然持怒意较多，争论一晌不过是为了守着阵中有无异样之时，拿来消遣的谈资罢了。谁也也从未见料想当世妖尊竟混入仙门，还有“磨镜”之癖。</p><p>妖姬已灭是板上钉钉的事，但如今萦绕在众仙门心头的大事，是那“璃龙篦”是否真如传言中被毁，尚且无定论。</p><p>每日皆有仙盟子弟守着赤水，查探异样，查询“璃龙篦”的下落。<br>日子一天天过去，头七日……垒七……五七……七七……过了这个时日，强如妖祖的逃逸残魂在阳间也会魂飞魄散。见这赤水草木稀生，池河干涸已无残魂异象，仙盟才撤下九天摄魂阵，众子弟打道回府，庆贺赤水此役。</p><p>九天摄魂阵乃仙盟第一禁术，此阵一出，怎管他大罗金仙、魔尊妖帝，绝无出逃生还的可能。但此术需要仙盟各家中功力深厚者去镇守六十四个方位，拼个功力散退方止，故经此一战，仙盟百家实力大挫，陆陆续续进入门辈迭代交替的时候……  </p><h1 id="重生-二"><a href="#重生-二" class="headerlink" title="重生 二"></a>重生 二</h1><p>浣溪城，河水清澈，能漂洗炼煮后的蚕丝，因此得名浣溪。仙门百家中烟云缭绕之地，晖晨金光，月下紫气，潭涧坞亭密布。</p><p>这其中烟云涧乃青缃姑娘最常驻之地。</p><p>七月初七，烟云鹊桥，青缃倚栏“不思浣”，怀揣着当日赤水一役，妹妹江纤尘给她留下的“璃龙篦”碎片，不过比那相思谷大不甚多。</p><p>“一梳梳到底，二梳白发齐眉，三梳……”</p><p>望这手心碎篦，青缃也不禁叹，“怎来得三疏儿孙满堂，仙门中人本不该有这情思。纤尘妹妹走后，日子也都清寂，说好的照顾她一人，伊人远在天边，安否？”</p><p>青缃早已了失魂了藏了泪，话一道似平常叙旧，但见那“碎篦”竟流露出妖气。</p><p>“纤尘？”</p><p>“非是这妖母纤尘降世，而是它感召到了同一块“璃龙篦”碎片的到来。”话音刚落，只见师姐江婉流降在亭檐，其娇若游龙，翩翩婉转绕芳甸，额上一点黄玉，丹唇皓齿，是“世家七贤”的天玑。</p><p>“可怜我的傻师妹，天下因“璃龙篦”大乱，你却还想着那江纤尘，当初你刚带她上山时可是从来不招待她呢，怎么才过个一两年你倒是彻底变了个样……”</p><p>“姐姐不应该是来训我的吧，今日是出了何事，要带上我出城？”</p><p>“还记得几年前的马嵬坡吗？那种恶心的东西好像又复活了！”可知江婉流此话中并非是忌惮那物。</p><p>“重生？”青缃将亭上的檀香弓取下……</p><hr><p>彼时的马嵬坡上，云雨难测。东方纤尘不禁打了几个寒颤。</p><p>挣几个钱倒不是什么重要的目的，众人皆崇尚修真家世，我倒是不齿那名声，谁说干好事的都是那帮人……东方纤尘叼着根茅草自娱道。</p><p>镇长恭恭敬敬地给东方纤尘细讲这马嵬坡近况：</p><p>“这里阴湿异乎寻常，半年前，正是那赤水妖姬魂飞魄散后，马嵬坡便似上了迷魂，陇桂镇上的人但凡进那坡中寻宝，当日不归，次日身首便挂在了沿途槐树，成了吊尸体。想来怕不是那妖姬归来作孽了吧？”</p><p>这镇上人邀他前来祛除这邪祟，毫不知这东方纤尘与那江纤尘的渊源瓜葛。只听说这东方纤尘算个半妖，是个有些本事的妖道。</p><p>东方纤尘当即是开了句玩笑：“归来作什么孽，这可不是归来了吗？”<br>“江纤尘虽号为妖祖，但也没做多少伤天害理之事，也罢，谁叫纤尘是妖却管那人间事，人和妖要能共处那还要仙盟何用，到底是犯几家的利益，动了仙盟的奶酪。”</p><p>东方纤尘潜意识是如此，但这也是他克制不住的想法，如今十全是男子东方纤尘，哪还是什么“破妖姬”江纤尘。</p><p>想来镇上从来只是马嵬坡闹了人命，而这镇却没有丝毫异动，镇里人也相安无事，看来是早有高人在马嵬坡下了界，无人知晓罢了。</p><p>“弗染君今日准备下去探一遭吗?”陇桂镇镇主问道，“我已向浣溪江氏发了函柬，大概今晚就到。”</p><p>一听这镇主还请了浣溪江氏的人，东方纤尘本是想等待多个帮手再行动的想法也被扑灭了，要是那两个家伙认出了他这妖法那可就百口莫辩了。</p><p>“不了，趁天色尚早，我一人行动即可！”弗染君便是东方纤尘的字。</p><p>东方纤尘现不过是个遍历天下的散人，没得个衬手利器。但见其手掠过之处，枯叶逢生，皆化作个玲珑小样，双手合实，念叨：“走进去瞧瞧。”</p><p>此术名曰——千障眼。</p><p>果真如他所愿，真人不必趟险，便有群妖为自己探境，“小叶妖门”所见，即是自己的视野区。</p><p>马嵬坡与陇桂阵接壤前的吊尸还着人的血色，看来是近日身亡不久。但往那深处寻去，具具皆是腐烂不堪，风湿肉臭，垂吊枝头。</p><p>那尸首瞳珠炯炯有神，不似被摄取魂魄那般萎靡，肉身虽腐烂，但可见残存腐肉不是被摄干了精气那般惨白，肉身自然风干，更加不可能是被吊起来蚕食了。</p><p>不摄精魂，不贪精气更不喜人肉。既非鬼，又不似妖，玩弄着村民，这到底是何物所为。</p><p>每句尸首皆借由黑藤悬于槐树枝干，小叶妖们攀沿而上，欲分别检查着每一具尸身。</p><p>忽见黑丝劈来，所有近尸眼线顷刻荡然无存。好似天罗地网般铺天盖下，数不尽的飞丝击穿了大量的眼线。</p><p>看来是被发现了，还好侥幸有几处眼线没近那尸身，东方纤尘召起其中一叶施展法相天地，化作十米巨森，宛若庞大树人。</p><p>“大家伙来了，就不信妖怪还不现身！”话虽如此，东方纤尘也快撑不住了，“可恶，给叶子化精，强行驱使施展法相天地对自己妖力的损耗不是一般的大。”</p><p>可下一幕却怔住了东方纤尘。树上所有吊尸竟然解了下来，疯狂涌向了巨森进行啃食。<br>体型变大了，灵活度便远不如体格娇小的形态。</p><p>那丧尸又名“飞尸”，速度极快，沿巨身躯干覆盖，以不可思议的速度破坏着。奈何东方妖力不足，卸下了术。</p><p>巨森顷刻间瓦解，自中心刮起巨风零落纤尘。</p><p>“弗染君，境内如何。”镇长问道。</p><p>“看到了很多更凶残的飞尸还有黑线，虽然没有看见妖怪的影子，但是可以肯定的是，任何尸身都是它的利器。”东方纤尘道，</p><p>在没有摸清它的底细前，贸然进去或许自己也不是那妖怪的对手。思索着，只见那镇长发现了一张符文，贴于接壤地界的大树处。</p><p>方才东方纤尘施法带走了大量化妖的叶片，又在大妖巨森肢散时林中灌起大风，那树上的符文自然便显露了出来。</p><p>看来之所以陇桂镇安宁，多是因这先人下的符文咒记。</p><p>伫立远眺，那符文怎生得如此熟悉，东方纤尘不禁回忆起，<br>“这纹路是妖母江纤尘下的结界！”</p><h1 id="玄梨-一"><a href="#玄梨-一" class="headerlink" title="玄梨 一"></a>玄梨 一</h1><p>虽不知自己何时在此处下的界，但这也说明，本人作古多年，还是干了不少好事的。</p><p>“镇主，这界的确是出自妖姬江纤尘之手，故那妖姬作祟的谣言自然不攻自破，不然以她的修为，怎么可能连自己的结界阵法也破不了。”东方纤尘对镇主解释道。</p><p>里边那邪祟控尸的手法与江纤尘倒有几分相似，但绝对不是江纤尘的残魂，东方纤尘不过只有那江纤尘的部分记忆，但是源自妖母的他也能感觉得到江纤尘的残魂。</p><p>这也不好说，毕竟这里边有个浓厚的味道，可以掩盖妖气。</p><p>“味道?”镇主尚且与东方纤尘同辈，对于东方纤尘这等修真士人自当是毕恭毕敬，“弗染君说的可是这物，方才风口灌来之物，见那香囊中是葡萄花鸟纹银，便知这是镇上前辈们所寻宝物。”</p><p>那香囊呈圆球形，通体镂空，质由银制外壁，无论球囊如何转动，香料都不会撒出。看来是个富有人家闺女之物。</p><p>“为了这么一个破东西，竟然有那么多人甘愿冒死进山，真是可笑……这凡间之物有什么值得贪恋的？”东方纤尘搭手不屑道。</p><p>“世所诸恶皆因贪婪而起，“贪”可谓是万恶之源。弗染君您身世半妖，颇有本事，故不暗财物。但俗世凡人，特别是贫苦之家可没那起点，衣不裹，食不饱，笃信“生死攸口黄金渡”的道理。弗染君难道也没有想追求的吗？比如说长生？”镇主道。</p><p>“你这毛头孩子管不着，总之就这么一个破球，真有那么值钱？”东方纤尘道。</p><p>“当然，单单这一个香囊倒没什么，但是这个香囊里边可藏着一段悠长的历史，还与那几年前刚被平定的妖祟有关。”镇主娓娓道来：</p><hr><p>“战国时代，一山一城，玄明城主带着杨梨花一行人仓皇北顾。</p><p>众人行至马嵬坡，单于将军与左宗慈密会。</p><p>“左使！这杨氏着实欺人太甚了！此番我等败走明顶城，真是拜那杨戚老头所赐——在城主面前诋毁我，害我下迁副将，还公然赐死我的得力手下。能人不受重用，城中再无良将，这倒好，终落个弃城而逃的下场，白费了昔日我攻城拔寨，为玄明城主做的功劳。”单于将军极度悲愤！</p><p>“玄明城主这是被那杨家妖媚惑得不深，众军士也都饱受他杨氏专政的苦，都是有苦难言，不然又是落得一个凌迟的下场。”左宗慈也是十分无奈，贵为昔日玄明城主得力参臣，左右臂膀，竟然比不上一个妖女。</p><p>“如今杨戚是城主大人的岳父，极得玄明城主的信任，杨戚专政下场如此，左使难道不早点出些对策？再任他嚣张跋扈下去，我们一行人便永无出头之日了。收服城池也必将遥遥无期了。”单于将军只是个莽夫，没些主见。</p><p>“将军莫急，我知道单将军急着手刃杨氏全族的性命，但又怕丢了自己性命还连累了自己部下。归根结底只因是杨氏一族在城主身边渗透太大，但是将军别忘了，如今全军对杨氏早已是敢怒不敢言，痛恨之心人尽有之，只要将军此刻发动兵变，众军士必将支持将军所做所谓，只要将军按照我说的做……”</p><p>当天夜里，单于率二十死侍直入杨戚老巢，虽说仅杨戚一个帐篷便有五百守卫护着，但见那单将军来势汹汹，所欲行之事，便是为斩下杨戚的头，竟无一人敢拦下单将军。单于如入无人之境，任那杨戚如何叫人护驾，非但无人肯护，连马匹都已提前被人牵走。可怜杨戚为官显赫一时，终是成了单于的刀下鬼。</p><p>玄明与杨梨花二人共处一帐，众人都不敢贸然闯入……”</p><hr><p>“玄明？这家伙既然养了这个人人喊而杀之的败类，昏了头的家伙，难道这些将士们不恨他吗，闯进去了不就一了百了？”听镇主讲到这，东方纤尘有些不解。</p><p>见东方纤尘不知马嵬坡轶事，镇主辩道：“玄明即使那时昏庸，但年少的玄明可是颇具威望，凭一己之力攻城拔寨，定都明顶。论武众将皆叹不如。即使那时昏庸，但玄明的功绩又有谁能与之平起？”</p><p>镇主再道：</p><hr><p>“然鸡叫天明，待那玄明起身出帐，却见全军众将士皆跪地乞求，而单于更是将杨戚的首级吊在帐前！</p><p>“城主！恕臣等冒昧，今日提着杨贼头颅前来乞求诛杀杨氏全族，臣甘以死谢罪，只愿城主能够早日恢复往年意气，不再被杨氏狐女所惑。”</p><p>玄明见此情此景怒气张拔：“放肆！未经本王的允许就敢杀了本王的亲人，再这么造次下去，难不成今晚就敢黄袍加身，提刀刺向本王！”“重责40大板！”</p><p>话虽如此，玄明又怎敢赐死单于，单于英勇可畏，忠诚可嘉，眼下又正值城破家亡，复兴昔景时刻，怎么能够赐死自己爱将，但40板下去，也是皮开肉绽，当即不能够上战了。</p><p>众军士皆同时跪地乞求赦免单将军的罪，只道这数月城池连失，出师不利，玄明难辞其咎，全军上下难免心存怨意。将士们也不堪杨氏家族讹言，要求赐死杨氏。</p><hr><p>“说这杨戚独断专政害人不浅，但与杨梨花又有何干？”东方纤尘问道。</p><p>镇主吟诵野史所述之文：“杨家有女初长成，风华绝貌乱世逢，一心本愿玄明度，无奈生断权势争。”</p><p>玄明、梨花相见后，玄明也放下了昔日争霸天下的心，失了雄心，不过已是个无用之主。十六城如今尽数已失，明顶城被破。这不完全是杨戚的错，难道玄明就没有错吗？</p><p>”</p><hr><p>左宗慈作为玄明的左使，如今也是军士代表，进帐与唐玄明商议。</p><p>“宗慈，除了赐死爱妃，难道就没有别的方法了吗！杨梨花不过就是杨戚实现自己权利欲望的工具，她又做错了什么？为什么就一定要她承担本不是她的错误！”玄明质问左宗慈。”</p><p>左宗慈俯身叩首，礼尽恭毕，再道：“城主，恕臣直言，您难道就看不出吗？城破家亡，众士对你此番的统帅已经满载怨言，单于的心意你又何尝不知。杀了杨戚只能平复众人对杨戚嚣张跋扈的仇心，但他们同时也对你的昏庸无度心怀不满。”</p><p>“单于不过是将舆论的矛头从你身上转嫁到您的爱妃身上！”</p><p>玄明此刻怒气未没，夺话而出：“可她何罪之有！”</p><p>左宗慈再扣三首，以视罪不可赦，来世报恩之意，便说：“城主您荒唐啊！她有罪，是重罪！罪在爱上的是一个权力加身，日后能成就大事的主宰身上。”</p><p>“您也有错，错就错在，在最不该爱的时候，爱上了一个不该爱的人。以为自己能为所爱倾尽天下，但身为势力上的走狗，终究是身不由己。给不起的后生，就不该去伤害，让对方为你承担责任，让你所爱的人去承受你带来的后果。”</p><p>“如今大势所趋，如果杨梨花不死，众军士不服，势必绑架单于逼他自立，而城主您也不能幸免于难。”</p><p>“杨妃若死，一可巩固您的地位，二来振奋士气，有望早日光复山河。主上您为贵人，女人可再寻，但命只有这一条。不如让她独自去承担城破家亡的责任。”<br>……</p><p>玄明望向梨花，心中难掩伤情。</p><p>玄明不肯下意，请求给他七日时间思索。</p><p>左宗慈知道唐玄明不肯下决心，私下里便密会杨梨花。</p><p>“杨后您今早也知我们所言，不知您有何感想。”宗慈道。</p><p>杨梨花泣泪徐许：“玄明让我逃离这是非之地，日后待他光复山河再亲自来寻我。可是我不想离开他……”</p><p>宗慈再道：“杨后是觉得，如今天下大势，城主已无心战事，若是苟利生死而走，城主也很可能战死，而相见也遥遥无期吗？”</p><p>杨梨花落泪不语，但确有此理。</p><p>“杨后您也当知，即使您逃了，这方圆数里早已被军士们围住，就是为了防止玄明给你偷渡，他们是下狠心要杀了你，你终究也是逃不出。若是一逃，这一别怕是黄泉路上相见了。”</p><p>“您应该知道怎么做了吧？”</p><h1 id="玄梨-二"><a href="#玄梨-二" class="headerlink" title="玄梨 二"></a>玄梨 二</h1><p>梨花不甘：“可是我不想离开玄明！”</p><p>“臣早年相识一人，名曰东方熠。此人擅世家奇术，我曾拜他习得一种封魂锁命之法，杨后您若是肯成就玄明，微臣冒死也会为你留下魂魄，让你依旧能和城主在一起！”</p><p>……</p><p>宗慈单劝至夜半子时，终于是道破了这一双一对的宿命。</p><p>“妾罪合万死，衣服之外，皆圣恩所赐。唯发肤是父母所生。今当即死，无以谢上。”说完铰下一缕头发让左宗慈转交给玄明。</p><p>当晚，左宗慈带着杨梨花的青丝递给玄明，玄明自然知道后来之况，赶了过去，只见爱妃已然断气，此情此景，唯有痛哭流涕还能作何感慨。</p><p>“城主玄明牺牲了杨梨花的生命，让她独自去承担城破家亡的责任。杨梨花自绞后，尸体被匆忙就地埋葬。”</p><hr><p>“东方熠？封魂锁命？这都是些什么妖术，这种鬼话也听信，难道不知是被迫的……”东方纤尘听此略感不解。</p><p>镇主再道：“</p><p>后来已过不知春秋多少载，玄明城主才派人前来移葬杨梨花的遗体。可入了马嵬坡的人却不再出来，但当年陇桂镇上的父老乡亲们也都见到了这行人上山的踪迹。</p><p>玄明城主在当时可谓奢华极致，传闻也富可敌国，正所谓尸霾群坟藏重金。马嵬坡自那玄明城主的部下上去后，山中便风雨不定，坡上常被雨水冲刷，有葬品落下被镇中人所拾，便是一夜暴富，自从之后常有镇上人前去寻坟，十去不还一，能回来的多少也是神志不清的家伙了。</p><p>但凭谁也有那一夜暴富的糟糕念想，不光陇桂镇，只要闻这马嵬坡坟葬还存，便能见每日络绎不绝的墓贼前去。仙盟中人也听闻那处邪祟，可也难以应付，折损了不少仙家道骨，但后来终有高人出手平定了。</p><p>听闻曾命悬归来的壮士回道，那杨梨花的遗体只剩下莹莹白骨，唯有临死时佩戴在胸前的香囊还完好似昔。只待那坡上安稳后再寻却不见得坟口。</p><p>但自那赤水妖姬被仙盟挫骨扬灰后，那马嵬坡却又不太安宁，常有金银流下，明知是那邪祟重生，但是镇上前辈依旧是贸然前去，落得镇中今由我这无能男儿主持……”说罢，镇主连连叹声。</p><p>东方纤尘听罢，这邪祟确实与这杨梨花脱不开干系，这般被迫而绞死，死后若是阴魂不散，便成了游离阳世的厉鬼，为了实现自己的愿望，又或是唯等着自己的仇人下来，才转生。或直接进行报复，或得法师超度，只要怨气一消，愿望达到就能转生。</p><p>但令东方纤尘尤为不解的是，明明妖姬江纤尘已经压制了那邪祟，却放了它一活路，在陇桂镇设上一道针对这邪祟的结界，这里边到底藏的是什么东西?和这江纤尘到底有什么关系?</p><p>值此时刻，天已迟暮。</p><p>“镇主，外边仙盟众人已经陆续进山。”</p><p>东方纤尘虽说是个散人，难得与这仙门子弟们能够同进这马嵬坡共事还是头一遭。</p><p>“奇了怪，这青缃他们怎么都还没来，虽然这些后生子弟来的声势浩大，但那山中邪祟根本不是这些小家伙所能应付得了，我那三千零叶也在顷刻间覆灭……”东方纤尘略感不对，总觉青缃等人肯定故落后声。</p><p>“那……弗染君，我们现在又该干嘛?”镇主在界外问道。</p><p>“干嘛?就我那点微弱道行，进了去也是送死，你倒不如给我讲那个杨梨花的事……”东方纤尘倒是显得不够重视那些仙门子弟的性命。</p><p>“后来……可能没了，噢！此前在镇边近这马嵬坡附近有间屋子，延边提有“谁为玄明重解得，一生遗恨系心肠”一联……”</p><p>这与此前相传玄明城主对杨梨花的事迹情感倒是不同。但是镇主还是娓娓道来：</p><hr><p>垂垂老矣的玄明君暮年踏足了马嵬坡下，修缮一屋，彻夜只待杨梨花，那夜春雨弥漫，槐下见（xian）一香囊，玄明见到香囊睹物思人，当年歌舞的欢乐尤在，伊人的浓爱只留下眼前这只香囊！他把香囊装入衣袖，不禁老泪纵横。雨夜那晚，玄明出走便再无回……</p><hr><p>“屋子?！那屋子现在何处！”事实上东方纤尘边听镇主讲着，边利用正午在林中潜伏的叶子精查探着所有仙盟子弟的安危动向。</p><p>如此之久也不见那邪祟现身，夜间阴气极重，如果那邪祟展现了今日正午的实力，那仙盟百家子弟怕是又重蹈当日覆辙。年暮的玄明城主，离开那屋后不归，得去那屋看看！</p><p>“那屋子莫非有什么?”镇主不解道。</p><p>一生遗恨系心肠，玄明城主分明有苦难言，或许两个传言都是真。倘若假设成立，刚刚在林中却寻不得玄明身迹。</p><p>如果传言是真的，如果玄明一直未归，如果江纤尘刻意留下了那邪祟的性命。没人给我个合理解释，那我只好去那屋里，自己找答案！”东方纤尘似乎领会到了一些难言之悟。</p><p>镇主携东方纤尘赶到。</p><p>但眼前一切却是惊呆了两人，那屋又岂是所期那般，早已是凭空消失了。</p><p>“不可能！几年前都还可见！这一点没错！即便是暴雨冲刷也得有痕迹！凭空消失?！”镇主道。</p><p>明明有了最说得通，最直接的线索，但为何却遇上这等异象，难道玄明不曾来过?</p><p>“香囊呢，解得开吗？”东方纤尘突然问道。</p><p>“香囊在我府上，弗染君怎么?”</p><p>见东方纤尘手中燃起绿色阴火，挥袖剥开迷雾，那间残陋破屋于是忽浮现眼前。此火名曰：妖阴离火。</p><p>“我们刚刚所见皆是幻象，”东方纤尘本也是中了毒香产生了幻觉。可此刻安插在马嵬坡里的那些“小叶精”的视野告诉他，山中子弟都产生了幻觉，开始自相残杀，所以只怕镇主与自己也中了招。阴火灼万物，其灰可释神。</p><p>神智既得清醒，屋内景致便一目了然，无联无对，但确是有人寄居过，俯身擦拭，除了尘灰，就是蓬乱垢发。</p><p>“不好，那个香囊有问题，快回去看看！”东方纤尘道。</p><p>先与这这镇主分向，镇主回镇上取回香囊，东方纤尘则先亲自去驱散山上毒气，解救仙门弟子，再去与镇主汇合。</p><h1 id="玄梨三"><a href="#玄梨三" class="headerlink" title="玄梨三"></a>玄梨三</h1><p>“没有人再能为玄明解开这只小小的香囊了，说不清楚是爱还是恨的情感，除了梨花谁人能解得开呢？”</p><p>“妖阴离火”虽能解开幻术，但偌大山头恐怕因此遭殃。“这些子弟也真是不省心啊，到底是见了什么，竟在此处中术……”</p><p>“无妨，只能这样了！”取纸扇“仙袂”，拭上自身妖血，置于空中，风涌汇聚，唤出风之使者——“妖姬仙袂”。</p><p>红缎绫罗妩媚矣，金铃起，风吹仙袂飘飘举。——仙袂之貌</p><p>“多年不见，纤尘你倒彻底变了个样。”仙袂执扇魅笑，任谁其实也能听出几分重逢之悦与几分物是人非的无奈。</p><p>“你知道我想干嘛，帮我把这整座山的迷烟给驱散了。”东方纤尘命令道。</p><p>“ho<del>见面都不肯说声思念，你真是有了青缃那丫头忘了我啊</del>”仙袂打笑道。</p><p>“没时间跟你废话了。”东方纤尘开始显得有些心虚。</p><p>“看出了，你弱了不少喔！”仙袂再一次媚笑，竟泄出一丝难以抹去的杀气，使那东方纤尘不禁背凉了一遭。</p><hr><p>这马嵬坡上山风迷雾是导致上山寻坟者死亡的最主要原因，但凡见到吊满一树的的干尸，谁人不感心寒，只需施以能令人产生幻觉的迷雾，凡人便能在恐惧中结束了生命。</p><p>仙盟子弟们即使不感到恐惧，能够在幻术中脱身，也会遇到里面那个棘手的邪祟使绊，百年前，仙盟靠着死伤惨重的代价才拿下马嵬坡，却还是让那邪祟逃了。</p><p>驱散迷雾绝非易事，但对于妖姬仙袂来说却如同砍瓜切菜一般，纸扇仙袂一挥破万法——“风乐”，仙袂执扇之臂并没有衣袖遮拦，纤纤细肘却使得这般狂风，犹有当年独战江、梦两主的神采。</p><p>风之强劲，那迷雾荡然全无，但摧枯拉朽般的威力也伤了不少仙盟弟子。</p><p>当是时，灵矢一记破了仙袂的纸扇。</p><p>仙袂这才注意到前方是浣溪江氏二弟子，青缃手执檀木灵弓守着仙袂，这本是无需忌惮之事，可身后竟连世家七贤的天玑——江婉流也在。</p><p>“如果我和纤尘联手……”只是这仙袂万万没想到，纤尘早已在江婉流来前便快马加鞭地逃去……</p><p>“可恶，这家伙怎么逃得这么快，刚刚重生，力量尚未恢复，不宜大战。”仙袂不禁吐槽起了东方纤尘。</p><p>“今日不想战，我还没清楚我是怎么重生的，来日相逢我们再会！”仙袂风起，衣裳肉身在风蚀中殆尽。</p><p>青、江二人非是想放过妖姬仙袂，只是那马嵬坡的事情更要紧，但谁都不敢相信的是，这仙袂本应是被江婉流和梦浮生二人所杀，竟在今日重生于此。</p><p>难道真是江纤尘重返世间了吗？这距离她被分魂才刚过一个年头！江婉流也见到了那个仓皇逃去的男子，在场且能召出妖姬仙袂的也就只有他了。</p><p>“师妹，那个人不去追吗？”江婉流道。</p><p>“不了，先让他去吧，马嵬坡的迷雾刚散不久，在雾气重聚前先调查清楚山中情况。”青缃也知道那个男人不简单……</p><hr><p>“终究是被那青缃看到了，不知道如今的她会拿我如何，但留下仙袂对上那两人确实也是无计之举……”</p><p>说这东方纤尘是逃，倒不如说是前去陇桂镇上救人，现在的陇桂镇必定正面临一场血雨风腥。</p><p>深山雾散无妖动，那么那至今不明的怪东西必然离去了它老巢，去了某个地方。如果传言中玄明城主拾到了香囊未归是真实发生的。那么能越过纤尘设下界的载体必然是香囊！</p><p>镇主已回镇上，却见那浣溪江氏弟子江天一遍体鳞伤，断了一臂，匍匐在地上，低吟着求救。</p><p>周遭不见一丝打斗的痕迹，街上无人，屋内吭不作声，却是极不寻常。镇主不过十七八岁出头，又胆敢冒险搭救，掉头就跑。</p><p>若是一镇上的民众都遭了殃，一个手无缚鸡之力的人又怎么可能安得全而退？</p><p>多家民户开了窗门，个个却无异样，本就是个常人，镇长自当是向前求救。气色正常，不像是已故更不可能是凶尸，但就这般容貌，眼中却失了神。挥了菜刀就断了镇长一臂。</p><p>不知所措的痛苦呻吟和嘶哑的惨叫声……</p><p>东方纤尘赶来一剑抛去救下镇主与江天一。</p><p>“镇主，江天一！你们二人怎么！”东方纤尘愕然。</p><p>村民们有了异于常人的灵活以及耐力，个个持刀围攻着东方。后边跃起一人，东方侧身飞踢制服，但那村民只是连连后退，贴地之前便止住了身躯，竟然浮起！其余民众皆是如此。</p><p>东方手持不过一柄普通凡铁剑，剑身怎可与家用刀具的硬度相比。既不能伤了这些民众，却也因此杀不出重围，剑在一点点被消蚀，如此一来便是东方也面临着危险。</p><p>“不像是中了幻术而被人操纵，能够同时操纵这么多活人，还真是不好应付。可除了江纤尘，我还真没听过哪个妖怪能够做到这样！”东方纤尘手握那已断之剑大喊：“仙袂！我若是让这些人伤了，你也不能苟活！”</p><p>“风蚀！”仙袂现身之时周遭的气流摧毁了控制着民众的黑线。</p><p>“看来正午所见的黑线就是控制这些民众的凶器！但是突然现出了一个气息，是——江纤尘力量的气息！难道那家伙真的回来了……”东方纤尘不禁一颤，</p><p>江纤尘能够将万物妖化为自己所用，即使不妖化，也能利用璃龙篦召唤处青丝控制任何东西，不同于世间控制意识的方式，江纤尘是靠凌驾世间绝对的妖力去压制一个人或妖的力量，使之丧失抵抗成为傀儡！</p><p>正思索着，却见那江天一突执剑刺来！<br>玄梨 四<br>东方纤尘正在气头上，一把夺过剑斩了江天一身后那看不见的黑线，那线在黑夜中连着人的后脑勺，视野原因根本发现不了。失去了控制的江天一自然是倒下，但在东方纤尘手上的更是惊出了他一身汗。头发！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;    这是在我高考结束后的那个漫长假期里写的第三本小说，当时想尝试写个风格另类的文章，后来因为学业的原因写了二十几章就断了
      
    
    </summary>
    
    
    
      <category term="璃龙篦" scheme="http://rika0-0.github.io/tags/%E7%92%83%E9%BE%99%E7%AF%A6/"/>
    
      <category term="小说" scheme="http://rika0-0.github.io/tags/%E5%B0%8F%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>眼</title>
    <link href="http://rika0-0.github.io/2020/04/10/%E7%9C%BC/"/>
    <id>http://rika0-0.github.io/2020/04/10/%E7%9C%BC/</id>
    <published>2020-04-10T07:32:32.000Z</published>
    <updated>2020-04-12T10:50:40.941Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>涉及到版权的缘故，书名以及内容都作了修改，均是段落，也就是随便截取一段放上来存档而已。</p><h1 id="第九章-全世界都趁我不在，亏欠了我的姑娘（一）"><a href="#第九章-全世界都趁我不在，亏欠了我的姑娘（一）" class="headerlink" title="第九章 全世界都趁我不在，亏欠了我的姑娘（一）"></a>第九章 全世界都趁我不在，亏欠了我的姑娘（一）</h1><p>家长会那天，本应是和往常无二异，确实那个“单眼婆”身边多了一位又高又帅气的小伙子。</p><p>静姝虽是瘦，但个子在孩子们间本就显得高挑，用顾景云给孩子的衣裳打扮，发饰夹持再和顾景云一起入课室就格外引人注目。好像静姝又漂亮了许多。</p><p>有几个小嘿溜球看了就抖瑟，看得出顾景云不在的日子里依旧是没少给静姝找茬，欺负她。但是静姝从来没跟顾景云提起自己被欺负过，女孩心中一直有着这种想法——只要顾景云不在身边，自己就必然会受到欺负，那就忍着吧，等到顾景云来了，一切都还是春天。</p><p>顾景云不知道，但是又怎么可能发觉不了，静姝的泪痕是深深印在顾景云心里的。这次和顾在一块，班里显然没人敢对静姝说是说非，班上开家长会，孩子都在门外候着，大人在班上听老师讲每个孩子在学校的表现，有个女孩一直趴在窗边看着顾景云。</p><p>“那是你哥哥吗？好帅啊。”小兰（兰芳）问道静姝。</p><p>“嗯嗯！”</p><p>“亲的还是堂？”</p><p>静姝却答不上来，都不是，用那个词都不对，更加不适合，因为顾景云对她来说已经比哥哥还重要。</p><p>兰芳是这班里和静姝最近的人了，不敢说关系很好，但至少能把静姝当作同学看待，能陪她踢踢毽子，看到静姝憧憬的眼神还会借她书看。</p><p>而班上同学对静姝显然不那么善待，静姝的作业几乎全是A+，故此只要有男同学的作业考到了A+便会被起哄为“天造地设”一对，这个词在班上很伤男同学的心，谁都不敢和静姝属于同一层次。女生则是不愿和静姝有同样花色的衣服、裤子，她们曾经的观念里，那是“疯子”、“垃圾婆”的象征。</p><p>尽管现在的静姝有了衣服，不再像从前那般打扮，但成见已经种下，如论什么样的打扮都被认为“披上脸皮的小丑”，丢人现眼，糟蹋衣服。</p><p>婆婆曾经对静姝说过：“衣服是穿给自己的，不是穿给别人看到 。”，顾景云也说过，“你的脸蛋是生给喜欢你的人看的，又何必理会别人的目光。”静姝从来都不在意。</p><p>可很多时候受人欺负都是无厘头的，你不去管他们，你不去在意外界的看法，却总是有人刻意去找你茬，那群孩子不论性别，都会去刻意用言语激怒静姝，如果静姝不为所动，就会采取小动作。有时是用笔在她的衣服是涂涂画画，有时就是用钩子破坏她的衣服，没有丝毫担心会割到女孩子。</p><p>这时的静姝绝对不会憋着，她会哭，毕竟这衣服是景云送的，听到哭声了，那群淘气鬼自然就会收手了，但心底里丝毫没有歉意，更别提怜悯。老师也会来安慰静姝，但这样的时刻每学期都会发生不少次。</p><p>曾经有人问我当高中老师和当小学老师哪一个更累，这个答案其实并没有意义，小时候的孩子并不好教导，往往说完后的话转眼就会忘，即使没有忘，可是因为自控力的不足，常常还会再犯，而高中生则在这方面有不可比拟的优势。工作量上，高中的确很繁累，但是孩子们都成长了，你付出的艰辛，你陪他们的日子，他们也反馈给你自豪感，会铭记你，会给你脱离校园生活后重返青春的幻觉。</p><p>但小学老师也并不是没有这般感觉，只是相比之下确实少了，但是工作压力没那么大，毕竟他们的本职更重要的是“育人”。</p><p>顾景云会调侃静姝：“别总哭，你就是哭太多才把另外颗眼睛哭没的。”虽然是笑话，但意思大家都明白，静姝也在克制自己哭鼻子的次数。</p><p>班主任特意点评了插班生静姝的表现——作业认真，是班上最懂事的孩子，说罢还请了静姝的家主上来分享心得。也就是请顾景云上台，这简直有太多羞愧了，毕竟自己不过还是个学生。</p><p>哪个家长都会听进眼前这个和自己家中长子一般年纪的年轻人，孩子说的话有什么好听的。</p><p>没等顾景云上台，这位华老师就替顾景云介绍了背景“兰大研究生”。</p><p>兰大，重点大学的研究生，这整个县里都没有这种高学历人才，况且他太年轻了，十九岁就已经读上研究生，有几个家长甚至打起了顾景云的主意。</p><p>顾景云没有言说多少辞，只觉得德育为先，智育为后，讲述了他在广州读书时推崇的“素质教育”理念。</p><p>这下更讨得大人喜爱了，竟有些考虑着女儿攀上顾景云这样的女婿，一下课差点成了相亲大会，好在顾景云很快就赶着带静姝离开，才少了许多麻烦。</p><p>其实也并没有那般尴尬，毕竟不是每个人家都想着自己大女儿嫁到远方的，有些人就听信过嫁出去的女儿泼出去的水，怕女儿远去了，没人给自己养老送终。</p><p>这天也算看到了和往常昔日不同的风景，看到静姝身边也不总是孤身一人，还有人能够以正常心态和静姝交流。顾景云没说什么特别的词，只对兰芳小朋友说了“将来走出大山再回来建设家乡”的辞。</p><p>顾景云从华老师口中了解到了一些静姝被欺负的事，他也不追问是哪些孩子是谁，来之前到了镇上去买了上百个棒棒糖，给兰芳五根，给了静姝班上的小朋友每人一根，不论是谁。对一个人好，他可能会忘记；但对一个人坏，他会铭记很久很久，孩子也是这样。顾景云不在，他自然需要帮静姝打通一下身边伙伴的关系，这颗糖对小朋友来说不算什么，但至少能给他们安心。</p><p>“老师夸你呢！”顾景云对静姝说。“以后在学校要继续好好听话。”</p><p>“嗯嗯(^o^)/。”</p><p>不可否认，此后静姝小学生活顺利了很多，几乎没有多少同学会去招惹她，他们知道静姝有个对大家很好很好的哥哥，有个每年假期都会来学校给孩子们带礼物的哥哥，他们也开始憧憬起来山外的世界，都渴望成为像顾景云一样的人。</p><p>但，静姝却很难一直开心、无忧地生活下去。</p><h1 id="第十章全世界都趁我不在，亏欠了我的姑娘（二）"><a href="#第十章全世界都趁我不在，亏欠了我的姑娘（二）" class="headerlink" title="第十章全世界都趁我不在，亏欠了我的姑娘（二）"></a>第十章全世界都趁我不在，亏欠了我的姑娘（二）</h1><p>时间回溯到静姝读六年级的那年，顾景云也读上了博士。</p><p>静姝的家被顾景云还有他带领的支教团队修理得典雅、朴质，颇有一番田园山居的雅致。也得到了许多附近老屋旧主人的帮助，能够居生的空间大了很多，生活更加惬意了。</p><p>最近晚上婆婆睡觉常常哭，人老了也哭，老人给静姝哭得心痛了。</p><p>还是同往常一样早起，早上煲粥，温好水，给婆婆把药放桌上，叮嘱着按时吃药，背着书包就出门。这时鸡群、鸭群们都规规矩矩地各处一窝。</p><p>等到学校四点下课孩子们一起归家，道途降下小雪，和静婆婆一样满首的白发。青丝染尽芳白要花多少年，书中夸张点说是“彻夜”。</p><p>当年静琬琰婆婆年轻时可是个大美女，那一张六十年代和老伴结婚时的照片一直珍藏在静琬琰的柜子里，原来那时的静家是很富有的家族，中间究竟经历了什么大事件，已经随着老人的记忆丢失了。</p><p>天格外的冷咧，临风畏首，听得沿途哀嚎枯叫，大山本应该隔绝了云雾，守护山下的村庄和花田，今日却把它们统统放了进来。</p><p>圈里的鸡、鸭跑到了野外被归来的静姝逮个正着，这小家伙一下就认出了是自家开溜出来的，跑了差不多一公里远的路。应该是只“滑翔鸡”，能蹦老高来越狱，不过沿途又发现了几只。</p><p>婆婆也真是的，可能是今天忘记了把卷子合上了。</p><p>到家了，想把今天所有见到的景物和婆婆分享，却发现婆婆已经安详地在门前的躺椅上离世了。</p><p>满地的鸡鸭打架留下的羽毛，女孩曾以为是恶作剧，婆婆从来不跟她开这个微笑，从来没给她念过“死”这一字，怕她会多想，最终却无征兆地离开了，在静姝看不到的地方。</p><p>手里攥着那湿透了的老伴的旧照片，还有静以筠娶阿珠时一家人的全家福……</p><p>女孩无论如何也唤不醒婆婆，再怎么道歉也求不来婆婆低头，她跪下婆婆也不再会去搭理。以后再没人会把碎肉分给他；再没人挑拣隔夜的饭菜独自吃尽，只为留新鲜的给孩子；更没人会陪她编织、剥壳、晚上给她煲汤煎药，说一句“丫头别太用功了”。</p><p>想背起婆婆，怕撩伤了她的胳膊；想扶着婆婆，婆婆却不愿迈开一步；香坛后的慈航画像也避开了女孩的目光，宣告着无可挽回。一切，都没等静姝准备好天就昏暗了。</p><p>生离死别真的不好赘述，谁能够坦然呢，就算是听说邻居有人去世了都不免开始感慨韶华易逝，总有种今晚梦醒了身边人就会少一个的错觉，但它确确实实可能会发生。</p><p>顾景云请假连夜赶回来，见到了静姝还有婆婆，明明半个多月前才刚陪完老人过完年，转眼间老人就不辞而别了。</p><p>很多事，偏偏要趁你不在意的时候才给你当头一棒。或许以后告别的时候一定要用力一点，因为你不知道多看的这一眼，可能就是最后一眼，多说的这一句话，可能就是最后一句话。</p><p>那璧上的慈航画像，是顾景云虔诚祈祷的神灵，年初一到初五各种的祭祀，如今可都作古了：“天公，这种玩笑开不得！你已经要了孩子的眼睛，要了她的声音，为何连亲人也不放过呢。”</p><p>静姝几乎失去了所有，但只要顾景云还在，她就只能是“几乎”。</p><p>静婆婆去世后，所有的仪式、手续都是由这两个孩子在打理，老人真的凄惨没有一个亲生的人替她送终，但静琬琰婆婆是幸运的，因为她收获了两个照顾她后生的孩子。</p><p>新办来的户口本只有静姝独自为户主，婆婆那页不见了，空荡荡的本子没有往日的珍贵，旧的那本还在，奉为了孩子的珍宝。</p><p>顾景云后来的七日陪着孩子辗转，她还不到十四岁，不能再一个人守着空荡荡的屋子，谁都放心不下，最后静安中学的腾出了一间宿舍给了女孩，从此留守校园。</p><p>当老家的门把横上，木檐终于是时候回到滴漏无人听的日子，鸡鸭都赶去了镇上卖尽，所有的推车、木桶花筛，手工编织的帘幕、花饰品，一罐罐陈酿的佳肴都无知音赏饮。柴米油盐酱醋茶，琴棋书画诗酒花，顾景云陪静姝的东西都将埋没的老屋里。此后山月不再拜访院中人的故事，水风空落、院前花惜无人赏。</p><p>拾起旧裳，到校舍过一个人的生活，此后的一日三晨不用再自己动手，班里也没人会去欺负静姝，他们更加照顾她。最终静姝语数外三门课程的考试成绩均是满分，因为农村户籍的缘故，在城市中念公办学校很贵，于是顾景云给静姝寻了间私立中学。为了方便照顾静姝，顾景云放弃了校内实惠的宿舍，转而到校外租房子上学。</p><p>静姝做过一个梦，梦里婆婆告诉她之前的那些都是假的。梦里她能说话，她念了很多遍婆婆的名字，边念边哭在婆婆怀里。静姝发誓一定做一个乖孩子，听婆婆话，不调皮。婆婆搂着她，承诺永远也不会离开她。</p><p>后来天亮了，婆婆没有回来，顾景云的衣服却湿了一大截，他也哭了。</p><p>“哥，你怎么哭了……”</p><p>那晚静姝会说话了，说很多幼稚的话，听得疼心，听得时间静止。</p><p>一个人能在什么时候长大，在辞别亲故时，在撕心裂肺中，在误会了世界、在遗忘了自己理想的时刻。</p><p>她是个十四岁的小姑娘，夜幕星辰下像是十六岁皎洁无暇的“不食人间烟火”。</p><h1 id="第十一章-第一卷完结（银河慷慨赐予我的蜜饯）"><a href="#第十一章-第一卷完结（银河慷慨赐予我的蜜饯）" class="headerlink" title="第十一章 第一卷完结（银河慷慨赐予我的蜜饯）"></a>第十一章 第一卷完结（银河慷慨赐予我的蜜饯）</h1><p>中秋的时候，山头蒙上一头纱盖，当日相流到山脚，野草都爬起来伸个懒腰。静屋的主人才走了几个月，门前已是芳草萋萋，像刻意插茱萸、采野菊、折杨柳，想必静琬琰还在这乘凉给它们讲老伴和儿子的故事罢。</p><p>这天旧屋重开，陈器漂洗，顾景云和静姝回故里看“婆婆”了。</p><p>月饼的风味不一，突然觉得从小到大斗排斥的“五仁”竟香了起来。月饼或许不好说出其中不同，但如果是冬至，北方吃的水饺，南方更爱汤圆，团团圆圆。烧一锅沸水，溜滚下这晶莹的白绿紫墨。</p><p>大概人是离别久了才会生情吧，从来没有离开过家的孩子哪里能深刻体会到“家”的味道。</p><p>坐谷坡，摇曳摆裙下的山花草木，溪水潺潺，跟顾景云比比谁编的花圈快。静姝自然是第一，那双苞茧的小手举高抖在顾景云额上，说道：“景云，等我长大了那天，你可以娶我吗？”<br>……</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;涉及到版权的缘故，书名以及内容都作了修改，均是段落，也就是随便截取一段放上来存档而已。&lt;/p&gt;
&lt;h1 id=&quot;第九章-全世界都趁我不在，亏
      
    
    </summary>
    
    
    
      <category term="小说" scheme="http://rika0-0.github.io/tags/%E5%B0%8F%E8%AF%B4/"/>
    
      <category term="眼" scheme="http://rika0-0.github.io/tags/%E7%9C%BC/"/>
    
  </entry>
  
  <entry>
    <title>关于我</title>
    <link href="http://rika0-0.github.io/2020/04/08/%E5%8D%9A%E5%AE%A2%E8%AF%B4%E6%98%8E/"/>
    <id>http://rika0-0.github.io/2020/04/08/%E5%8D%9A%E5%AE%A2%E8%AF%B4%E6%98%8E/</id>
    <published>2020-04-08T07:32:32.000Z</published>
    <updated>2020-04-12T10:27:55.223Z</updated>
    
    <content type="html"><![CDATA[<h1 id="这里只是简单写点自我介绍"><a href="#这里只是简单写点自我介绍" class="headerlink" title="这里只是简单写点自我介绍"></a>这里只是简单写点自我介绍</h1><ul><li>除了“码农”的身份我还有和“作家”的工作，所以我在各个平台的更新频率比较低哈~知道没人催我的，YY一下。</li><li>目前本科在读，</li><li>所学专业：计算机</li><li>工作经验：街舞社老师（因伤下岗）、网络作家（在职）</li><li>B站昵称：雨落弦鸣</li><li>笔名（保密）</li><li>特长：舞蹈，大多数体育类项目。</li><li>爱好：钢琴、绘画、美工设计、影视制作、古风</li><li>最喜欢的音乐：《穿越时空的思念》</li><li>最喜欢的舞种：中国舞、breaking</li><li>最享受的生活：听轻音乐、钢琴曲，在案头写故事，抬眼时，庭前花开花落，天空云卷云舒；饿时上街带一小肉，分给我还有我的小猫们。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;这里只是简单写点自我介绍&quot;&gt;&lt;a href=&quot;#这里只是简单写点自我介绍&quot; class=&quot;headerlink&quot; title=&quot;这里只是简单写点自我介绍&quot;&gt;&lt;/a&gt;这里只是简单写点自我介绍&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;除了“码农”的身份我还有和“作家”的工作，所以我
      
    
    </summary>
    
    
    
      <category term="自我介绍" scheme="http://rika0-0.github.io/tags/%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title>前后端实战项目（持续更新）</title>
    <link href="http://rika0-0.github.io/2020/04/08/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AEupdating/"/>
    <id>http://rika0-0.github.io/2020/04/08/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AEupdating/</id>
    <published>2020-04-08T06:55:39.000Z</published>
    <updated>2020-04-12T14:22:46.006Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在线教育项目"><a href="#在线教育项目" class="headerlink" title="在线教育项目"></a>在线教育项目</h1><blockquote><p>基于SpringBoot和Vue的前后端分离项目  </p></blockquote><blockquote><p>无图警告：本文可能全程无图所以附上一张几年前瞎画的作品来展示。<br><img src="https://wx2.sinaimg.cn/mw1024/c42ef76egy1gdr9ucmw51j21400u0e83.jpg" alt="这是这篇文章唯一的图片"></p></blockquote><h1 id="day01-Mybatis-Plus入门"><a href="#day01-Mybatis-Plus入门" class="headerlink" title="day01 Mybatis Plus入门"></a>day01 Mybatis Plus入门</h1><h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><p>官网：<a href="http://mp.baomidou.com/" target="_blank" rel="noopener">http://mp.baomidou.com/</a><br>参考教程：<a href="http://mp.baomidou.com/guide/" target="_blank" rel="noopener">http://mp.baomidou.com/guide/</a><br>MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p><h2 id="二、入门"><a href="#二、入门" class="headerlink" title="二、入门"></a>二、入门</h2><p>看官方文档可以进行学习，此处只写需要注意的几点。</p><h3 id="一-、引入依赖"><a href="#一-、引入依赖" class="headerlink" title="一 、引入依赖"></a>一 、引入依赖</h3><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>dependencies<span class="token operator">></span>        <span class="token operator">&lt;</span>dependency<span class="token operator">></span>            <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>        <span class="token operator">&lt;</span>dependency<span class="token operator">></span>            <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>test<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>            <span class="token operator">&lt;</span>scope<span class="token operator">></span>test<span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">></span>            <span class="token operator">&lt;</span>exclusions<span class="token operator">></span>                <span class="token operator">&lt;</span>exclusion<span class="token operator">></span>                    <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>vintage<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>                    <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>junit<span class="token operator">-</span>vintage<span class="token operator">-</span>engine<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>exclusion<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>exclusions<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>mybatis<span class="token operator">-</span>plus<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>dependency<span class="token operator">></span>            <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>baomidou<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>mybatis<span class="token operator">-</span>plus<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>            <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">3.3</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>mysql<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>dependency<span class="token operator">></span>            <span class="token operator">&lt;</span>groupId<span class="token operator">></span>mysql<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>mysql<span class="token operator">-</span>connector<span class="token operator">-</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>lombok用来简化实体类<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>dependency<span class="token operator">></span>            <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>projectlombok<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>lombok<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>sql 分析打印<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>dependency<span class="token operator">></span>            <span class="token operator">&lt;</span>groupId<span class="token operator">></span>p6spy<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>p6spy<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>            <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">3.8</span><span class="token punctuation">.</span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">></span></code></pre><p>之所以不写版本号是因为添加“parent”标签里的内容后，“spring-boot-starter-parent”会为开发者提供常用jar的版本管理，所以我们不需要指定版本，使用人家提供好的就可以了。当然，指定也是可以的，这会覆盖官方默认的版本，不推荐。</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>parent<span class="token operator">></span>        <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>        <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>parent<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>        <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">2.2</span><span class="token punctuation">.</span><span class="token number">6</span><span class="token punctuation">.</span>RELEASE<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>        <span class="token operator">&lt;</span>relativePath<span class="token operator">/</span><span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> lookup parent from repository <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>parent<span class="token operator">></span></code></pre><p>关于mp的版本，3.0.5的版本里许多功能已经不需要加入bean了，默认配置好的，按照我使用的经验来看，好像3.2.0以上的不需要配置“乐观锁”和“分页插件”。</p><h3 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h3><p>在 application.properties 配置文件中添加 MySQL 数据库的相关配置：</p><pre class=" language-java"><code class="language-java">spring<span class="token punctuation">.</span>datasource<span class="token punctuation">.</span>driver<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">-</span>name<span class="token operator">=</span>com<span class="token punctuation">.</span>p6spy<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>spy<span class="token punctuation">.</span>P6SpyDriverspring<span class="token punctuation">.</span>datasource<span class="token punctuation">.</span>url<span class="token operator">=</span>jdbc<span class="token operator">:</span>p6spy<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">3306</span><span class="token operator">/</span>mybatis_plus<span class="token operator">?</span>serverTimezone<span class="token operator">=</span>GMT<span class="token operator">%</span>2B8spring<span class="token punctuation">.</span>datasource<span class="token punctuation">.</span>username<span class="token operator">=</span>userspring<span class="token punctuation">.</span>datasource<span class="token punctuation">.</span>password<span class="token operator">=</span><span class="token number">123456</span>spring<span class="token punctuation">.</span>profiles<span class="token punctuation">.</span>active<span class="token operator">=</span>dev#mybatis日志mybatis<span class="token operator">-</span>plus<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>log<span class="token operator">-</span>impl<span class="token operator">=</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>logging<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>StdOutImplmybatis<span class="token operator">-</span>plus<span class="token punctuation">.</span>global<span class="token operator">-</span>config<span class="token punctuation">.</span>db<span class="token operator">-</span>config<span class="token punctuation">.</span>logic<span class="token operator">-</span>delete<span class="token operator">-</span>value<span class="token operator">=</span><span class="token number">1</span>mybatis<span class="token operator">-</span>plus<span class="token punctuation">.</span>global<span class="token operator">-</span>config<span class="token punctuation">.</span>db<span class="token operator">-</span>config<span class="token punctuation">.</span>logic<span class="token operator">-</span>not<span class="token operator">-</span>delete<span class="token operator">-</span>value<span class="token operator">=</span><span class="token number">0</span></code></pre><p>注意：</p><p>1、这里的 url 使用了 ?serverTimezone=GMT%2B8 后缀，因为Spring Boot 2.1 集成了 8.0版本的jdbc驱动，这个版本的 jdbc 驱动需要添加这个后缀，否则运行测试用例报告如下错误：</p><p>java.sql.SQLException: The server time zone value ‘ÖÐ¹ú±ê×¼Ê±¼ä’ is unrecognized or represents more </p><p>2、这里的 driver-class-name 使用了  com.mysql.cj.jdbc.Driver ，在 jdbc 8 中 建议使用这个驱动，之前的 com.mysql.jdbc.Driver 已经被废弃，否则运行测试用例的时候会有 WARN 信息</p><h3 id="三、部分代码注意点"><a href="#三、部分代码注意点" class="headerlink" title="三、部分代码注意点"></a>三、部分代码注意点</h3><ol><li>主类</li></ol><p>在 Spring Boot 启动类中添加 @MapperScan 注解，扫描 Mapper 文件夹<br>注意：扫描的包名根据实际情况修改，<br>且可以写在配置类，如MpConfig中：</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Configuration</span><span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">"com.yhg.mpdemo.mapper"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Mpconfig</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 分页插件     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> PaginationInterceptor <span class="token function">paginationInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PaginationInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><ol start="2"><li>实体</li></ol><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@TableId</span><span class="token punctuation">(</span>type <span class="token operator">=</span> IdType<span class="token punctuation">.</span>ID_WORKER<span class="token punctuation">)</span>    <span class="token keyword">private</span> Long id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer age<span class="token punctuation">;</span>    <span class="token keyword">private</span> String email<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//表中含下划线改为驼峰式命名</span><span class="token punctuation">}</span></code></pre><ol start="3"><li>测试类的部分示例</li></ol><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MpdemoApplicationTests</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserMapper userMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>User<span class="token operator">></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//添加操作</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        User user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"hhhhhh2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">"lucy@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> insert <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"insert:"</span> <span class="token operator">+</span> insert<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//修改操作</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        User user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>3L<span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> row <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testLocker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//查询</span>        User user <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectById</span><span class="token punctuation">(</span>1248623851416322049L<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//修改数据</span>        user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"Helen Yao"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">"helen@qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//执行更新</span>        userMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>User<span class="token operator">></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectBatchIds</span><span class="token punctuation">(</span>Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>1L<span class="token punctuation">,</span> 2L<span class="token punctuation">,</span> 3L<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//pagehandler类似</span>        <span class="token comment" spellcheck="true">//创建page对象</span>        <span class="token comment" spellcheck="true">//传入两个参数,第一个对象是当前页，第二个是每页显示的记录数</span>        Page<span class="token operator">&lt;</span>User<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//调用mp分页查询的方法</span>        <span class="token comment" spellcheck="true">//调用mp分页查询过程中,底层数据封装到page对象里面</span>        userMapper<span class="token punctuation">.</span><span class="token function">selectPage</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//通过page对象获取分页数据</span>        page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>out<span class="token operator">:</span><span class="token operator">:</span>println<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getCurrent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">hasPrevious</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//删除</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDeleteById</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span>1248818588345819137L<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建querywrapper对象</span>    QueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//通过QW设置条件</span><span class="token punctuation">}</span></code></pre><p>4.注意事项：</p><ul><li>ID_WORKER<br>MyBatis-Plus默认的主键策略是：ID_WORKER  全局唯一ID</li><li>自增策略<br>要想主键自增需要配置如下主键策略<br>需要在创建数据表的时候设置主键自增<br>实体字段中配置 @TableId(type = IdType.AUTO)<br>要想影响所有实体的配置，可以设置全局主键配置<pre><code>#全局设置主键生成策略mybatis-plus.global-config.db-config.id-type=auto</code></pre><h3 id="自动填充"><a href="#自动填充" class="headerlink" title="自动填充"></a>自动填充</h3>项目中经常会遇到一些数据，每次都使用相同的方式填充，例如记录的创建时间，更新时间等。<br>我们可以使用MyBatis Plus的自动填充功能，完成这些字段的赋值工作：</li></ul><p>（1）数据库表中添加自动填充字段<br>在User表中添加datetime类型的新的字段 create_time、update_time</p><p>（2）实体上添加注解</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> FieldFill<span class="token punctuation">.</span>INSERT<span class="token punctuation">)</span>    <span class="token keyword">private</span> Date createTime<span class="token punctuation">;</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> FieldFill<span class="token punctuation">.</span>INSERT_UPDATE<span class="token punctuation">)</span>    <span class="token keyword">private</span> Date updateTime<span class="token punctuation">;</span></code></pre><p>（3）实现元对象处理器接口<br>注意：不要忘记添加 @Component 注解<br>Component表示交给spring来处理，Service或者ResponseXXX</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//Component表示交给spring来处理，Service或者ResponseXXX</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMetaObjectHandler</span> <span class="token keyword">implements</span> <span class="token class-name">MetaObjectHandler</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertFill</span><span class="token punctuation">(</span>MetaObject metaObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFieldValByName</span><span class="token punctuation">(</span><span class="token string">"createTime"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>metaObject<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFieldValByName</span><span class="token punctuation">(</span><span class="token string">"updateTime"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>metaObject<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateFill</span><span class="token punctuation">(</span>MetaObject metaObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFieldValByName</span><span class="token punctuation">(</span><span class="token string">"updateTime"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>metaObject<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h3 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h3><p>主要适用场景：当要更新一条记录的时候，希望这条记录没有被别人更新，也就是说实现线程安全的数据更新<br>乐观锁实现方式：</p><p>取出记录时，获取当前version<br>更新时，带上这个version<br>执行更新时， set version = newVersion where version = oldVersion<br>如果version不对，就更新失败</p><p>（1）数据库中添加version字段</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span><span class="token keyword">user</span><span class="token punctuation">`</span> <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> <span class="token punctuation">`</span>version<span class="token punctuation">`</span> <span class="token keyword">INT</span></code></pre><p>（2）实体类添加version字段<br>并添加 @Version 注解</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Version</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> FieldFill<span class="token punctuation">.</span>INSERT<span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer version<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//版本号属性</span></code></pre><p>（3）元对象处理器接口添加version的insert默认值</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMetaObjectHandler</span> <span class="token keyword">implements</span> <span class="token class-name">MetaObjectHandler</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertFill</span><span class="token punctuation">(</span>MetaObject metaObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFieldValByName</span><span class="token punctuation">(</span><span class="token string">"createTime"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>metaObject<span class="token punctuation">)</span><span class="token punctuation">;</span>        ……        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFieldValByName</span><span class="token punctuation">(</span><span class="token string">"version"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>metaObject<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//就是这句</span>        ……<span class="token punctuation">}</span></code></pre><p>特别说明:</p><p>支持的数据类型只有 int,Integer,long,Long,Date,Timestamp,LocalDateTime<br>整数类型下 newVersion = oldVersion + 1<br>newVersion 会回写到 entity 中<br>仅支持 updateById(id) 与 update(entity, wrapper) 方法<br>在 update(entity, wrapper) 方法下, wrapper 不能复用!!!<br>（4）在 MybatisPlusConfig 中注册 Bean<br>(3.6以上版本不用了，)</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//乐观锁插件</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> OptimisticLockerInterceptor <span class="token function">optimisticLockerInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OptimisticLockerInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><p>MyBatis Plus自带分页插件，只要简单的配置即可实现分页功能<br>（1）创建配置类<br>此时可以删除主类中的 @MapperScan 扫描注解（新版应该也不用了）</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**     * 分页插件     */</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> PaginationInterceptor <span class="token function">paginationInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PaginationInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="逻辑删除"><a href="#逻辑删除" class="headerlink" title="逻辑删除"></a>逻辑删除</h3><p>逻辑删除<br>物理删除：真实删除，将对应数据从数据库中删除，之后查询不到此条被删除数据<br>逻辑删除：假删除，将对应数据中代表是否被删除字段状态修改为“被删除状态”，之后在数据库中仍旧能看到此条数据记录</p><p>（1）数据库中添加 deleted字段<br>（2）实体类添加deleted 字段<br>并加上 @TableLogic 注解 和 @TableField(fill = FieldFill.INSERT) 注解<br>@TableLogic</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@TableLogic</span>    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>fill <span class="token operator">=</span> FieldFill<span class="token punctuation">.</span>INSERT<span class="token punctuation">)</span>    <span class="token keyword">private</span> Integer deleted<span class="token punctuation">;</span></code></pre><p>（3）元对象处理器接口添加deleted的insert默认值</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateFill</span><span class="token punctuation">(</span>MetaObject metaObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFieldValByName</span><span class="token punctuation">(</span><span class="token string">"updateTime"</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>metaObject<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>（4）application.properties 加入配置<br>此为默认值，如果你的默认值和mp默认的一样,该配置可无</p><pre class=" language-java"><code class="language-java">mybatis<span class="token operator">-</span>plus<span class="token punctuation">.</span>global<span class="token operator">-</span>config<span class="token punctuation">.</span>db<span class="token operator">-</span>config<span class="token punctuation">.</span>logic<span class="token operator">-</span>delete<span class="token operator">-</span>value<span class="token operator">=</span><span class="token number">1</span>mybatis<span class="token operator">-</span>plus<span class="token punctuation">.</span>global<span class="token operator">-</span>config<span class="token punctuation">.</span>db<span class="token operator">-</span>config<span class="token punctuation">.</span>logic<span class="token operator">-</span>not<span class="token operator">-</span>delete<span class="token operator">-</span>value<span class="token operator">=</span><span class="token number">0</span></code></pre><p>（5）在 MybatisPlusConfig 中注册 Bean（注意新版的好像不用）</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Bean</span><span class="token keyword">public</span> ISqlInjector <span class="token function">sqlInjector</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LogicSqlInjector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>（6）测试逻辑删除<br>测试后发现，数据并没有被删除，deleted字段的值由0变成了1<br>测试后分析打印的sql语句，是一条update<br>注意：被删除数据的deleted 字段的值必须是 0，才能被选取出来执行逻辑删除的操作</p><h3 id="mp的条件构造器wapper"><a href="#mp的条件构造器wapper" class="headerlink" title="mp的条件构造器wapper"></a>mp的条件构造器wapper</h3><p><img src="https://img-blog.csdn.net/20181001202710403?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzM3MDM0Mjk0/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="在这里插入图片描述"><br>上图表格为条件构造器使用中的各个方法格式和说明，如有不懂可参考<a href="https://mp.baomidou.com/guide/wrapper.html#abstractwrapper" target="_blank" rel="noopener">官方文档</a><br>以下代码转载自：<a href="https://blog.csdn.net/m0_37034294/article/details/82917234" target="_blank" rel="noopener">https://blog.csdn.net/m0_37034294/article/details/82917234</a><br>构造器条件</p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>lqf<span class="token punctuation">.</span>crud<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>Wrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span>LambdaQueryWrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span>QueryWrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>update<span class="token punctuation">.</span>UpdateWrapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>IPage<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>toolkit<span class="token punctuation">.</span>Constants<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span>pagination<span class="token punctuation">.</span>Page<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>lqf<span class="token punctuation">.</span>crud<span class="token punctuation">.</span>bean<span class="token punctuation">.</span>crm<span class="token punctuation">.</span>User<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>lqf<span class="token punctuation">.</span>crud<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>crm<span class="token punctuation">.</span>UserMapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xerces<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>util<span class="token punctuation">.</span>EntityResolverWrapper<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span>Param<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>session<span class="token punctuation">.</span>RowBounds<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>SpringBootTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>jsf<span class="token punctuation">.</span>el<span class="token punctuation">.</span>WebApplicationContextFacesELResolver<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>naming<span class="token punctuation">.</span>Name<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QueryWrapperTests</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> UserMapper mapper<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * &lt;p>     * 根据根据 entity 条件，删除记录,QueryWrapper实体对象封装操作类（可以为 null）     * 下方获取到queryWrapper后删除的查询条件为name字段为null的and年龄大于等于12的and email字段不为null的     * 同理写法条件添加的方式就不做过多介绍了。     * &lt;/p>     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        QueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        queryWrapper                <span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">ge</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> delete <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"delete return count = "</span> <span class="token operator">+</span> delete<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * &lt;p>     * 根据 entity 条件，查询一条记录,     * 这里和上方删除构造条件一样，只是seletOne返回的是一条实体记录，当出现多条时会报错     * &lt;/p>     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        QueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"lqf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        User user <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * &lt;p>     * 根据 Wrapper 条件，查询总记录数     * &lt;/p>     *     * @param queryWrapper 实体对象     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        QueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"lqf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Integer count <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectCount</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * &lt;p>     * 根据 entity 条件，查询全部记录     * &lt;/p>     *     * @param queryWrapper 实体对象封装操作类（可以为 null）为null查询全部     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>User<span class="token operator">></span> list <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * &lt;p>     * 根据 Wrapper 条件，查询全部记录     * &lt;/p>     *     * @param queryWrapper 实体对象封装操作类（可以为 null）     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectMaps</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        QueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        queryWrapper<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> maps <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectMaps</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map <span class="token operator">:</span> maps<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 打印结果     * {name=lqf, id=1046282328366391406, age=12, email=lqf@163.com, status=false}     * {name=lqf, id=1046282328366391407, age=12, email=lqf@163.com, status=false}     * {name=lqf, id=1046282328366391408, age=12, email=lqf@163.com, status=false}     * {name=lqf, id=1046282328366391409, age=12, email=lqf@163.com, status=false}     * {name=lqf, id=1046282328366391410, age=12, email=lqf@163.com, status=false}     * {name=lqf, id=1046282328366391411, age=12, email=lqf@163.com, status=false}     * {name=lqf, id=1046282328366391412, age=12, email=lqf@163.com, status=false}     * {name=lqf, id=1046282328366391413, age=12, email=lqf@163.com, status=false}     * {name=lqf, id=1046282328366391414, age=12, email=lqf@163.com, status=false}     * {name=lqf, id=1046282328366391415, age=12, email=lqf@163.com, status=false}     * {name=lqf, id=1046282328366391416, age=12, email=lqf@163.com, status=false}     * {name=lqf, id=1046282328366391417, age=12, email=lqf@163.com, status=false}     * {name=lqf, id=1046282328366391418, age=12, email=lqf@163.com, status=false}     * json类型的键值对模式     */</span>    <span class="token comment" spellcheck="true">/**     * &lt;p>     * 根据 entity 条件，查询全部记录（并翻页）     * &lt;/p>     *     * @param page         分页查询条件（可以为 RowBounds.DEFAULT）     * @param queryWrapper 实体对象封装操作类（可以为 null）     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Page<span class="token operator">&lt;</span>User<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        QueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        IPage<span class="token operator">&lt;</span>User<span class="token operator">></span> userIPage <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectPage</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>userIPage<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 打印结果     * ==>  Preparing: SELECT COUNT(1) FROM user     * ==> Parameters:     * &lt;==    Columns: COUNT(1)     * &lt;==        Row: 100     * ==>  Preparing: SELECT id,name,age,email,status FROM user LIMIT 0,5     * ==> Parameters:     * &lt;==    Columns: id, name, age, email, status     * &lt;==        Row: 1046282328366391319, lqf, 12, lqf@163.com, 0     * &lt;==        Row: 1046282328366391320, lqf, 12, lqf@163.com, 0     * &lt;==        Row: 1046282328366391321, lqf, 12, lqf@163.com, 0     * &lt;==        Row: 1046282328366391322, lqf, 12, lqf@163.com, 0     * &lt;==        Row: 1046282328366391323, lqf, 12, lqf@163.com, 0     * &lt;==      Total: 5     *     *     * 这里需要在项目中加入分页插件     *   @Bean     *     public PaginationInterceptor paginationInterceptor() {     *         return new PaginationInterceptor();     *     }     */</span>    <span class="token comment" spellcheck="true">/**     * &lt;p>     * 根据 Wrapper 条件，查询全部记录（并翻页）     * &lt;/p>     *     * @param page         分页查询条件     * @param queryWrapper 实体对象封装操作类     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">selectMapsPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Page<span class="token operator">&lt;</span>User<span class="token operator">></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        QueryWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        IPage<span class="token operator">&lt;</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">>></span> mapIPage <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectMapsPage</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mapIPage<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 和上个分页同理只是返回类型不同     */</span>    <span class="token comment" spellcheck="true">/**     * &lt;p>     * 根据 whereEntity 条件，更新记录     * &lt;/p>     *     * @param entity        实体对象 (set 条件值,不能为 null)     * @param updateWrapper 实体对象封装操作类（可以为 null,里面的 entity 用于生成 where 语句）     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//修改值</span>        User user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"zhangsan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//修改条件s</span>        UpdateWrapper<span class="token operator">&lt;</span>User<span class="token operator">></span> userUpdateWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UpdateWrapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        userUpdateWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"lqf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> update <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> userUpdateWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>update<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 打印结果     * ==>  Preparing: UPDATE user SET name=?, status=? WHERE name = ?     * ==> Parameters: zhangsan(String), true(Boolean), lqf(String)     * &lt;==    Updates: 100     * Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@56a4f272]     * 100     * 2018-10-02 15:08:03.928  INFO 7972 --- [       Thread-2] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@37313c65: startup date [Tue Oct 02 15:08:00 CST 2018]; root of context hierarchy     * 2018-10-02 15:08:03.937  INFO 7972 --- [       Thread-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...     * 2018-10-02 15:08:04.053  INFO 7972 --- [       Thread-2] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.     *     * Process finished with exit code 0     */</span><span class="token punctuation">}</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在线教育项目&quot;&gt;&lt;a href=&quot;#在线教育项目&quot; class=&quot;headerlink&quot; title=&quot;在线教育项目&quot;&gt;&lt;/a&gt;在线教育项目&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;基于SpringBoot和Vue的前后端分离项目  &lt;/p&gt;
&lt;/blockquo
      
    
    </summary>
    
    
    
      <category term="SpringBoot" scheme="http://rika0-0.github.io/tags/SpringBoot/"/>
    
      <category term="vue" scheme="http://rika0-0.github.io/tags/vue/"/>
    
      <category term="mybatis plus" scheme="http://rika0-0.github.io/tags/mybatis-plus/"/>
    
      <category term="前后端分离" scheme="http://rika0-0.github.io/tags/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
  </entry>
  
  <entry>
    <title>最快速地搭建炫丽的个人网站or博客</title>
    <link href="http://rika0-0.github.io/2020/04/08/%E6%9C%80%E5%BF%AB%E9%80%9F%E5%9C%B0%E6%90%AD%E5%BB%BA%E7%82%AB%E4%B8%BD%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99or%E5%8D%9A%E5%AE%A2/"/>
    <id>http://rika0-0.github.io/2020/04/08/%E6%9C%80%E5%BF%AB%E9%80%9F%E5%9C%B0%E6%90%AD%E5%BB%BA%E7%82%AB%E4%B8%BD%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99or%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-04-08T06:55:39.000Z</published>
    <updated>2020-04-12T10:51:01.243Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><pre><code>为什么希望你们都有个人网站呢，好处真的太多了，说句最实在的，你的个人网站也可以在你面试公司的时候加分，何乐而不为。</code></pre><h1 id="网站搭建"><a href="#网站搭建" class="headerlink" title="网站搭建"></a>网站搭建</h1><h2 id="视频教程地址：B站视频地址"><a href="#视频教程地址：B站视频地址" class="headerlink" title="视频教程地址：B站视频地址"></a>视频教程地址：<a href="https://www.bilibili.com/video/BV1je41147Ma/" target="_blank" rel="noopener">B站视频地址</a></h2><h2 id="1-nodejs，Git环境搭建："><a href="#1-nodejs，Git环境搭建：" class="headerlink" title="1.nodejs，Git环境搭建："></a>1.nodejs，Git环境搭建：</h2><ul><li><p><a href="https://blog.csdn.net/qq_43285335/article/details/90696126" target="_blank" rel="noopener">nodejs搭建教程:</a></p></li><li><p>注意了，像Git这种服务器在国外的东西，它的官网下载这个软件会非常慢，建议直接在百度上搜索git下载与安装，各种软件园都能直接快速下载，留一下版本最好不要太旧就行。</p></li><li><p><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html" target="_blank" rel="noopener">git搭建教程：</a></p></li><li><p><a href="https://jingyan.baidu.com/article/e8cdb32b0ce12137042bad51.html" target="_blank" rel="noopener">补充参考文档（可能你会用到）：</a></p></li><li><p><a href="https://www.cnblogs.com/luyuandatabase/p/12145707.html" target="_blank" rel="noopener">配置淘宝云</a></p><h2 id="2-注册GitHub账号并创建仓库"><a href="#2-注册GitHub账号并创建仓库" class="headerlink" title="2.注册GitHub账号并创建仓库"></a>2.注册GitHub账号并创建仓库</h2><ol><li>注册就不用我说了，创建仓库视频里有，然后这个也很简单，不会就百度（应该没人去百度的，太简单了）</li><li>格式要求：gfyuan.github.io</li><li>下面两个东西选其一我在视频里面没有演示，因为我早已经弄好了，你们看着弄。</li><li><a href="https://www.xuanfengge.com/using-ssh-key-link-github-photo-tour.html" target="_blank" rel="noopener">参考文档（可能用到）——GitHub的ssh密匙添加：</a></li><li><a href="https://www.jianshu.com/p/3f4b2ede5a93" target="_blank" rel="noopener">参考文档（可能用到）——Gitee的ssh密匙添加：</a></li></ol><h2 id="3-快速利用hexo搭建博客："><a href="#3-快速利用hexo搭建博客：" class="headerlink" title="3.快速利用hexo搭建博客："></a>3.快速利用hexo搭建博客：</h2><ol><li><a href="https://hexoscript.gitbook.io/hexo-script/" target="_blank" rel="noopener">脚本教程</a></li><li><a href="https://blog.csdn.net/jspnetcn/article/details/104111651" target="_blank" rel="noopener">matery主题安装及优化</a></li></ol></li></ul><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md" target="_blank" rel="noopener">matery主题官网：</a></p><h2 id="博客搭建完成"><a href="#博客搭建完成" class="headerlink" title="博客搭建完成"></a>博客搭建完成</h2><p><a href="https://rika0-0.github.io/">我的博客</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li>自行下载</li><li>vs code</li></ul><h2 id="需要的编辑软件"><a href="#需要的编辑软件" class="headerlink" title="需要的编辑软件"></a>需要的编辑软件</h2><ul><li>Typora<br>个人建议在国内的网站上面下载，不要去官网，下载慢</li><li>VS code<br>轻量级文档编辑器</li></ul><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p> <img src="https://ss0.bdstatic.com/94oJfD_bAAcT8t7mm9GUKT-xh_/timg?image&quality=100&size=b4000_4000&sec=1586329259&di=4b52fb528ca0962c5b80fef165441db4&src=http://image.cilacila.com/uploads/20190112/21/1547301428-yHBpuVbPFO.jpg" alt=""></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p> <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VScode下载地址</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;为什么希望你们都有个人网站呢，好处真的太多了，说句最实在的，你的个人网站也可以在你面试公司的时候加分，何乐而不为。&lt;/cod
      
    
    </summary>
    
    
    
      <category term="web" scheme="http://rika0-0.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>算法精要总复习（updating）</title>
    <link href="http://rika0-0.github.io/2020/04/06/%E7%AE%97%E6%B3%95%E7%B2%BE%E8%A6%81%E6%80%BB%E5%A4%8D%E4%B9%A0updating/"/>
    <id>http://rika0-0.github.io/2020/04/06/%E7%AE%97%E6%B3%95%E7%B2%BE%E8%A6%81%E6%80%BB%E5%A4%8D%E4%B9%A0updating/</id>
    <published>2020-04-06T15:01:39.000Z</published>
    <updated>2020-04-08T07:15:11.423Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><h2 id="算法的复杂性分析"><a href="#算法的复杂性分析" class="headerlink" title="算法的复杂性分析"></a>算法的复杂性分析</h2><h3 id="时间复杂性"><a href="#时间复杂性" class="headerlink" title="时间复杂性"></a>时间复杂性</h3><ul><li>在进行算法分析时，语句总的执行次数T(n)是关于问题规模n的函数，进而分析T(n)随n的变化情况并确定T(n)的数量级。算法的时间复杂度，也就是算法的时间量度，记作：T(n)= O(f(n))。它表示随问题规模n的增大，算法执行时间的增长率和f(n)的增长率相同，称作算法的渐近时间复杂度，简称为时间复杂度。其中f(n)是问题规模n的某个函数。<br>用大写O()来体现算法时间复杂度的记法，我们称之为大O记法。<br>一般情况下，随着输入规模n的增大，T(n)增长最慢的算法为最优算法。</li></ul><ol><li>推导大O阶方法   </li></ol><p>如何分析一个算法的时间复杂度呢？即如何推导大O阶呢？  </p><p>用常数1取代运行时间中的所有加法常数。  </p><p>在修改后的运行次数函数中，只保留最高阶项。 </p><p>如果最高阶项存在且不是1，则去除与这个项相乘的常数。 </p><p>得到的最后结果就是大O阶。</p><h4 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h4><ul><li><p>常数阶</p><pre class=" language-c++"><code class="language-c++">int sum = 0, n = 100;printf(“I love you.com\n”);printf(“I love you.com\n”);printf(“I love you.com\n”);printf(“I love you.com\n”);printf(“I love you.com\n”);printf(“I love you.com\n”);sum = (1+n)*n/2;</code></pre><p>第一条就说明了所有加法常数给他个O(1)即可</p></li><li><p>线性阶   </p></li></ul><p>一般含有非嵌套循环涉及线性阶，线性阶就是随着问题规模n的扩大，对应计算次数呈直线增长.<br>这段代码，它的循环的时间复杂度为O(n)，因为循环体中的代码需要执行n次。</p><pre class=" language-c++"><code class="language-c++">int i , n = 100, sum = 0;for( i=0; i < n; i++ ){    sum = sum + i;}</code></pre><ul><li>平方阶<br>n等于100，也就是说外层循环每执行一次，内层循环就执行100次，那总共程序想要从这两个循环出来，需要执行100*100次，也就是n的平方。所以这段代码的时间复杂度为O(n^2)。<pre class=" language-c++"><code class="language-c++">int i, j, n = 100;for( i=0; i < n; i++ ){  for( j=0; j < n; j++ )  {      printf(“I love FishC.com\n”);  }}</code></pre></li><li>对数阶<br>由于每次i*2之后，就距离n更近一步，假设有x个2相乘后大于或等于n，则会退出循环。<br>于是由2^x = n得到x = log(2)n，所以这个循环的时间复杂度为O(logn)。<pre class=" language-c++"><code class="language-c++">int i = 1, n = 100;while( i < n ){  i = i * 2;}</code></pre></li><li>函数调用的时间复杂度分析<br><img src="https://upload-images.jianshu.io/upload_images/4807654-9d3b7f58b405a618.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/659/format/webp" alt=""></li></ul><h3 id="空间复杂性"><a href="#空间复杂性" class="headerlink" title="空间复杂性"></a>空间复杂性</h3><ul><li>算法的空间复杂度通过计算算法所需的存储空间实现，算法的空间复杂度的计算公式记作：S(n)=O(f(n))，其中，n为问题的规模，f(n)为语句关于n所占存储空间的函数。  </li><li>通常，我们都是用“时间复杂度”来指运行时间的需求，是用“空间复杂度”指空间需求。<br>当直接要让我们求“复杂度”时，通常指的是时间复杂度。<br>显然对时间复杂度的追求更是属于算法的潮流！<h3 id="渐近分析中的5个符号"><a href="#渐近分析中的5个符号" class="headerlink" title="渐近分析中的5个符号"></a>渐近分析中的5个符号</h3></li><li>渐近精确界记号：ΘΘ（big-theta）</li><li>渐近上界记号：OO(big-oh)</li><li>渐近下界记号：ΩΩ(big-omege)</li><li>非渐近紧确上界：o(小-oh)</li><li>非渐近紧确下界：ω(小-omege)<h1 id="第二章-递归与分治策略"><a href="#第二章-递归与分治策略" class="headerlink" title="第二章 递归与分治策略"></a>第二章 递归与分治策略</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h1&gt;&lt;h2 id=&quot;算法的复杂性分析&quot;&gt;&lt;a href=&quot;#算法的复杂性分析&quot; class=&quot;headerlink&quot; title=&quot;算法的复杂
      
    
    </summary>
    
    
    
      <category term="算法" scheme="http://rika0-0.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
